apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.pingidentity.pingone"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode = 17
        versionName "1.8.1"

        // Make sure this is consistent with the redirect URI used in res/raw/auth_config.json,
        // or specify additional redirect URIs in AndroidManifest.xml
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'pingonesdk://sample'
        ]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "OIDC_ISSUER", OIDC_ISSUER
        buildConfigField "String", "CLIENT_ID", CLIENT_ID
        buildConfigField "String", "SCOPE", SCOPE
        buildConfigField "String", "OIDC_REDIRECT_URI", OIDC_REDIRECT_URI
        /*
         * This is the variable that is injected into build config, while building the application.
         * If you want to use the Android Device Verification feature you should assign a value to
         * this variable in the gradle.properties file. Access this value from the application in the
         * following way:
         * String safetyNetApiKey = BuildConfig.API_KEY;
         */
        buildConfigField("String", "API_KEY", "${safetynet_api_key}")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }

}
dependencies {
    /*
     * import the PingOne for Customer Android SDK. Get the latest version from
     * https://search.maven.org/search?q=g:com.pingidentity.pingonemfa
     */
    implementation 'com.pingidentity.pingonemfa:android-sdk:1.8.1'
    /*
     * import the PingOne for Customer Mobile Authentication Framework
     */
    implementation project(':PingAuthenticationUI')

    //Import the Firebase BoM (Bill of Materials)
    implementation platform('com.google.firebase:firebase-bom:26.3.0')
    //FireCloud Messaging Services
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-messaging'

    //Google's gSon library to build and parse JSON format
    implementation 'com.google.code.gson:gson:2.9.0'

    //to manage lifecycle easily
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'

    /*
     * To easily build cameraX preview
     */
    implementation 'androidx.camera:camera-camera2:1.1.0'
    implementation 'androidx.camera:camera-lifecycle:1.1.0'
    implementation 'androidx.camera:camera-view:1.0.0-alpha31'

    /*
     * ML Kit is a mobile SDK that brings Google's on-device machine learning expertise to a device
     * ML Kit's APIs all run on-device, allowing for real-time use cases where you want to process
     * a live camera stream. This also means that the functionality is available offline.
     */
    implementation 'com.google.mlkit:barcode-scanning:17.0.3'

    /*
     * AppAuth for Android is a client SDK for communicating with OAuth 2.0 and OpenID Connect providers
     * for versions look at https://bintray.com/openid/net.openid/appauth#
     */
    implementation 'net.openid:appauth:0.11.1'

    /* EnableHuaweiMobileServices
    // Push kit HMS Core SDK
    implementation 'com.huawei.hms:push:6.3.0.302'
    EnableHuaweiMobileServices */

    testImplementation 'junit:junit:4.13.2'
}
apply plugin: 'com.google.gms.google-services'
/* EnableHuaweiMobileServices
apply plugin: 'com.huawei.agconnect'
EnableHuaweiMobileServices */

